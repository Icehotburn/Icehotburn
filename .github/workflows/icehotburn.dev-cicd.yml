name: Icehotburn.dev CICD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Detect changes in icehotburn.dev/*
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            changed:
              - 'icehotburn.dev/**'

  # JOB to build and test the code in incehotburn.dev
  build_and_test_code:
    needs: changes
    if: ${{ github.ref != 'refs/heads/main'  && needs.changes.outputs.changed == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: icehotburn.dev
    strategy:
      matrix:
        node-version: [18.12.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: icehotburn.dev/package-lock.json
      - name: Build and test with Node.js ${{ matrix.node-version }}
        run: |
          npm ci
          npm run build
          npm run test:unit
          npm run test:e2e:ci

  # JOB to build and publish a docker image for the code in incehotburn.dev
  build_and_publish_image:
    needs: changes
    if: ${{ github.ref == 'refs/heads/main' && needs.changes.outputs.changed == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: icehotburn.dev
    env:
      REGISTRY: ghcr.io
      OWNER: icehotburn
      IMAGE_NAME: icehotburn-dev
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./icehotburn.dev
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
